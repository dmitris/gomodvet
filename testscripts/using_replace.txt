# enable modules.
env GO111MODULE=on

# cd to a directory with a 'hello.go' and a 'go.mod' file.
cd gopath/src/sample

# build to make sure we have a valid setup and up-to-date 'go.mod'.
go build

# gomodvet passes if we disable -replace and -upgrades
gomodvet -replace=false -upgrades=false

# gomodvet fails if we enable -replace. We pass -v in case we need to troubleshoot.
! gomodvet -v -replace=true -upgrades=false
stdout 'gomodvet-008: the main module has ''replace'' directives'

# Two test files: a 'go.mod', and 'hello.go', with a 'replace' in the 'go.mod'.
# The starting point for 'go.mod' is pointing at example-package-b v3.0.2.
# The latest available version for example-package-b is v3.0.3.

-- gopath/src/sample/go.mod --
module sample/hello

require github.com/thepudds/example-package-b/v3 v3.0.2

replace github.com/thepudds/example-package-b/v3 => github.com/thepudds/example-package-b/v3 v3.0.3

-- gopath/src/sample/hello.go --

package main

import (
	"github.com/thepudds/example-package-b/v3"   
)

func main() {
	b.Hello()
}